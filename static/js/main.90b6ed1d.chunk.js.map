{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/event.js","components/event/Index.js","components/event/Create.js","components/event/Show.js","components/event/Update.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","style","backgroundColor","expand","Brand","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showEvent","IndexEvents","events","eventsJSX","userOnly","length","map","Col","Card","border","title","Body","Title","Subtitle","moment","date","format","time","Text","rsvps","_id","filter","owner","src","process","Row","xs","md","CreateEvent","handleSubmit","createEvent","err","description","ShowEvent","handleDelete","match","deleteEvent","params","handleRsvp","isRsvp","myRsvp","rsvp","pop","rsvpStatus","userId","rsvpEvent","componentDidMount","rsvpJSX","onClick","UpdateEvent","updateEvent","App","msgAlerts","msg","uuid","path","Index","Show","Create","Update","appJsx","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.90b6ed1d.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\nimport '../../index.scss'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/my-events' className='nav-link'>My Events</NavLink>\n    <NavLink to='/create-event' className='nav-link'>Create Event</NavLink>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar className='navbar-style' style={{ backgroundColor: '#64b6ac' }} variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/'><span className='gather-style'>Gather</span></Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://boiling-sands-32479.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 className='page-title'>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 className='page-title'>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 className='page-title'>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const indexEvents = user => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/events'\n    // headers: {\n    //   Authorization: `Bearer ${user.token}`\n    // }\n  })\n}\nexport const createEvent = (data, user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/events',\n    data: {\n      event: data\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\nexport const showEvent = (id, user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/events/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\nexport const deleteEvent = (id, user) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/events/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updateEvent = (data, id, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/events/' + id,\n    data: {\n      event: {\n        title: data.title,\n        location: data.location,\n        date: data.date,\n        time: data.time,\n        description: data.description\n\n      }\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const rsvpEvent = (id, userId, user, rsvp) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/rsvp/' + id,\n    data: {\n      rsvps: {\n        user: userId,\n        rsvpStatus: rsvp\n      }\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { indexEvents } from '../../api/event'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport '../../index.scss'\nimport moment from 'moment'\n\nclass IndexEvents extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      events: null\n    }\n  }\n\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n\n    indexEvents(user)\n      .then((res) => this.setState({ events: res.data.events }))\n      .then(() => {\n        msgAlert({\n          heading: 'Index Success',\n          message: 'Yippie indexed!',\n          variant: 'success'\n        })\n      })\n      .catch(error => {\n        msgAlert({\n          heading: 'Index Failed',\n          message: 'Index Error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    const { events } = this.state\n    const { userOnly, user } = this.props\n\n    if (events === null) {\n      return 'Loading...'\n    }\n\n    let eventsJSX\n    // checking if there are no events in the entire app\n    if (events.length === 0) {\n      eventsJSX = 'No events, create some so we can gather'\n      // checking if user is not logged-in\n    } if (user === null) {\n      eventsJSX = events.map((event) => (\n        <Col key={event._id}>\n          <Card border=\"secondary\">\n            <Card.Header>\n              <Link\n                className='event-link'\n                to={'/sign-in'}>\n                {event.title}\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>\n                {event.location}\n              </Card.Title>\n              <Card.Subtitle>\n                {moment(event.date).format('MMMM Do YYYY')} at {event.time}\n              </Card.Subtitle>\n              <Card.Text>\n                {event.rsvps.length} people attending\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))\n      // checking if userOnly prop is true\n    } else if (userOnly) {\n      // filtering events then mapping through the event where owner is equal to user id\n      eventsJSX = events.filter(event => event.owner === user._id).map(event => (\n        <Col key={event._id}>\n          <Card border=\"secondary\">\n            <Card.Header>\n              <Link\n                className='event-link'\n                to={`/events/${event._id}`}>\n                {event.title}\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>\n                {event.location}\n              </Card.Title>\n              <Card.Subtitle>\n                {moment(event.date).format('MMMM Do YYYY')} at {event.time}\n              </Card.Subtitle>\n              <Card.Text>\n                {event.rsvps.length} people attending\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))\n      // checking if user has no events\n      if (eventsJSX.length === 0) {\n        eventsJSX = 'You have not created any events, create some so we can gather'\n      }\n      // mapping through events if userOnly is false\n    } else {\n      eventsJSX = events.map((event) => (\n        <Col key={event._id}>\n          <Card border=\"secondary\">\n            <Card.Header>\n              <Link\n                className='event-link'\n                to={`/events/${event._id}`}>\n                {event.title}\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>\n                {event.location}\n              </Card.Title>\n              <Card.Subtitle>\n                {moment(event.date).format('MMMM Do YYYY')} at {event.time}\n              </Card.Subtitle>\n              <Card.Text>\n                {event.rsvps.length} people attending\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))\n    }\n\n    return (\n      <>\n        <div className='hero'><img className='hero-img' src={process.env.PUBLIC_URL + '/hero1.jpg'}/></div>\n        <div className='main-content'>\n          <h3 className='page-title'>{userOnly ? 'My Gatherings' : 'Current Gatherings'}</h3>\n          <Row xs={1} md={3} className=\"g-4\">\n            {eventsJSX}\n          </Row>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default IndexEvents\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport { withRouter } from 'react-router-dom'\n\n// import EventForm from '../shared/EventForm'\n\nimport { createEvent } from '../../api/event'\n\nclass CreateEvent extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      location: '',\n      date: '',\n      time: '',\n      description: '',\n      owner: ''\n    }\n  }\n\n  handleChange = (event) => {\n    // The event.target of this event will be an input element\n    // Which will have a `name` attribute (key in the state) & a `value` (what the user typed)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    // add history below to do the push\n    const { user, msgAlert, history } = this.props\n\n    createEvent(this.state, user)\n      .then(res => history.push('/events/' + res.data.event._id))\n      .then(() => msgAlert({ heading: 'Event Created!', message: 'Party Time!', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Event creation failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <div className='form-box'>\n          <div className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n              <h3 className='page-title'>Create Event</h3>\n              <Form onSubmit={this.handleSubmit}>\n                <Form.Group controlId='title'>\n                  <Form.Label>Event Title</Form.Label>\n                  <Form.Control\n                    required\n                    name='title'\n                    value={this.state.title}\n                    placeholder='Event title'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='location'>\n                  <Form.Label>Location</Form.Label>\n                  <Form.Control\n                    required\n                    name='location'\n                    value={this.state.location}\n                    placeholder='Event Location'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='date'>\n                  <Form.Label>Date</Form.Label>\n                  <Form.Control\n                    required\n                    name='date'\n                    type='date'\n                    value={this.state.date}\n                    placeholder='Event Date'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='time'>\n                  <Form.Label>Time</Form.Label>\n                  <Form.Control\n                    required\n                    name='time'\n                    value={this.state.time}\n                    placeholder='Event Time'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='description'>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    required\n                    name='description'\n                    value={this.state.description}\n                    placeholder='Event Description'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Button type='submit'>Submit</Button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n// add withRouter() when doing the history push above\nexport default withRouter(CreateEvent)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { deleteEvent, showEvent, rsvpEvent } from '../../api/event'\nimport Button from 'react-bootstrap/Button'\nimport moment from 'moment'\n\nclass ShowEvent extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      event: null\n    }\n  }\n\n  componentDidMount () {\n    const { match, user, msgAlert } = this.props\n\n    showEvent(match.params.id, user)\n      .then(res => this.setState({ event: res.data.event }))\n      .then(() => {\n        msgAlert({\n          heading: 'Show event success',\n          message: 'Yippie! Success!',\n          variant: 'success'\n        })\n      })\n      .catch(error => {\n        msgAlert({\n          heading: 'Show event failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  handleDelete = () => {\n    const { match, user, msgAlert, history } = this.props\n\n    deleteEvent(match.params.id, user)\n      .then(() => history.push('/'))\n      .then(() => {\n        msgAlert({\n          heading: 'Event deleted',\n          message: 'Yippe! Event deleted!',\n          variant: 'success'\n        })\n      })\n      .catch(error => {\n        msgAlert({\n          heading: 'Event deletion failed',\n          message: 'Event Delete Error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  handleRsvp = () => {\n    const { match, user, msgAlert } = this.props\n    const { rsvps } = this.state.event\n\n    let isRsvp = false // setting initial rsvpStatus to false\n\n    // filtering through rsvps and grabbing only the rsvp that belongs to the user\n    const myRsvp = rsvps.filter(rsvp => rsvp.user === user._id).pop()\n\n    // checking if myRsvp is defined (if the user has already rsvpd)\n    if (myRsvp) {\n      // then setting isRsvp to the users rsvpStatus (setting it to true)\n      isRsvp = myRsvp.rsvpStatus\n    }\n\n    // checking if rsvp is false then make an api call\n    if (!isRsvp) {\n      rsvpEvent(match.params.id, user._id, user, true)\n        .then(() => this.componentDidMount())\n        .then(() => {\n          msgAlert({\n            heading: 'Event rsvp success',\n            message: 'Yippie! Success!',\n            variant: 'success'\n          })\n        })\n        .catch(error => {\n          msgAlert({\n            heading: 'Event rsvp failed',\n            message: 'Event rsvp Error: ' + error.message,\n            variant: 'danger'\n          })\n        })\n    } else {\n      msgAlert({\n        heading: 'Oops!',\n        message: 'Looks like you are already rsvpd',\n        variant: 'warning'\n      })\n    }\n  }\n\n  render () {\n    if (this.state.event === null) {\n      return 'loading...'\n    }\n    //  add owner back in\n    const { title, location, date, time, description, owner, rsvps } = this.state.event\n    const { user, history, match } = this.props\n    const rsvpJSX = rsvps.map(rsvp => (\n      <li key={rsvp._id}>{rsvp.user}</li>\n    ))\n\n    return (\n      <>\n        <h3 className='event-title'>{title}</h3>\n        <div className='event-details'>\n          <h6 className='event-details-title'>Where:</h6>\n          <p className='event-details-info'> {location}</p>\n          <h6 className='event-details-title'>When:</h6>\n          <p className='event-details-info'>{moment(date).format('MMMM Do YYYY')} at {time}</p>\n          <h6 className='event-details-title'>Desciption:</h6>\n          <p className='event-details-info'>{description}</p>\n          <h6 className='event-details-title'>RSVP:</h6>\n          {rsvpJSX}\n          {user._id === owner && (\n            <>\n              <Button onClick={this.handleDelete}>Delete</Button>\n              <Button onClick={() => history.push(`/events/${match.params.id}/update-event`)}>Update</Button>\n            </>\n          )}\n          {/* This button allow anyone to rsvp to an event */}\n          <Button onClick={this.handleRsvp}>RSVP</Button>\n        </div>\n      </>\n    )\n  }\n}\n\n// component MUST be wrapped to use withRouter\nexport default withRouter(ShowEvent)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updateEvent, showEvent } from '../../api/event'\n// import MovieForm from '../shared/MovieForm'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass UpdateEvent extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      location: '',\n      date: '',\n      time: '',\n      description: '',\n      owner: ''\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n\n    showEvent(match.params.id, user)\n      .then(res => this.setState({ event: res.data.event }))\n      .then(() => msgAlert({\n        heading: 'Show event success',\n        message: 'Check out the event',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show event failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  // handleChange = (event) => {\n  //   // because `this.state.movie` is an object with multiple keys, we have to do some fancy updating\n  //   const userInput = { [event.target.name]: event.target.value }\n  //   this.setState(currState => {\n  //     // \"Spread\" out current movie state key/value pairs, then add the new one at the end\n  //     // this will override the old key/value pair in the state but leave the others untouched\n  //     return { event: { ...currState.event, ...userInput } }\n  //   })\n  // }\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n\n      const { user, msgAlert, history, match } = this.props\n\n      updateEvent(this.state, match.params.id, user)\n        .then(res => history.push('/events/' + match.params.id))\n        .then(() => msgAlert({ heading: 'Event Updated!', message: 'Nice work, go check out your event.', variant: 'success' }))\n        .catch(err => {\n          msgAlert({\n            heading: 'Event update failed :(',\n            message: 'Something went wrong: ' + err.message,\n            variant: 'danger'\n          })\n        })\n    }\n\n    render () {\n      return (\n        <>\n          <div className='form-box'>\n            <div className='row'>\n              <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3 className='page-title'>Update Event</h3>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group controlId='title'>\n                    <Form.Label>Event Title</Form.Label>\n                    <Form.Control\n                      required\n                      name='title'\n                      value={this.state.title}\n                      placeholder={this.state.event?.title}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId='location'>\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control\n                      required\n                      name='location'\n                      value={this.state.location}\n                      placeholder={this.state.event?.location}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId='date'>\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      required\n                      name='date'\n                      type='date'\n                      value={this.state.date}\n                      placeholder={this.state.event?.date}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId='time'>\n                    <Form.Label>Time</Form.Label>\n                    <Form.Control\n                      required\n                      name='time'\n                      value={this.state.time}\n                      placeholder={this.state.event?.time}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId='description'>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      required\n                      name='description'\n                      value={this.state.description}\n                      placeholder={this.state.event?.description}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Button type='submit'>Submit</Button>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </>\n      )\n    }\n}\n\nexport default withRouter(UpdateEvent)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport IndexEvents from './components/event/Index'\nimport CreateEvent from './components/event/Create'\nimport ShowEvent from './components/event/Show'\nimport UpdateEvent from './components/event/Update'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n        <Header user={user} />\n        {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n        <main className='container'>\n          <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            exact\n            user={user}\n            path='/'\n            render={() => <IndexEvents msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/events/:id'\n            render={() => <ShowEvent msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/create-event'\n            render={() => <CreateEvent msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/events/:id/update-event'\n            render={() => <UpdateEvent msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/my-events'\n            // userOnly prop used for filtering events that only belong to the user\n            render={() => <IndexEvents msgAlert={this.msgAlert} user={user} userOnly={true} />}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}